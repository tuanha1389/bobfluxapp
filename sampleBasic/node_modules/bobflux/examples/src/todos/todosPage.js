"use strict";
var g = require("bobril-g11n");
var m = require("bobril-m");
var fg = require("bobril-flexbox-grid");
var f = require("../flux");
var c = require("./state.cursors");
var a = require("./actions");
exports.createTodosPage = f.createRouteComponent({
    render: function (_ctx, me) {
        me.children = [
            fg.Row({
                center: 1 /* xs */,
                children: fg.Col({
                    md: 12,
                    children: addFormFactory()
                })
            }),
            fg.Row({
                center: 1 /* xs */,
                children: fg.Col({
                    md: 12,
                    children: todosOverviewFactory()
                })
            })
        ];
    }
});
var createAddForm = f.createComponent({
    render: function (ctx, me) {
        me.children = m.Paper({
            children: fg.Row({
                middle: 1 /* xs */,
                children: [
                    fg.Col({
                        md: 8,
                        children: m.TextField({
                            value: ctx.state.name,
                            onChange: function (v) { return a.updateNewTodoName(v); }
                        })
                    }),
                    fg.Col({
                        md: 4,
                        children: m.Button({
                            type: 1 /* Raised */,
                            feature: 1 /* Primary */,
                            children: g.t("Add"),
                            action: function () { a.addTodo(); }
                        })
                    })
                ]
            })
        });
    }
});
var addFormFactory = createAddForm(c.editedTodoCursor);
var createTodosOverview = f.createComponent({
    render: function (ctx, me) {
        me.children = m.Paper({
            children: [
                fg.Row({
                    children: [
                        fg.Col({
                            xs: 2,
                            children: g.t("Is done")
                        }),
                        fg.Col({
                            xs: 10,
                            children: g.t("Name")
                        })
                    ]
                })
            ].concat(ctx.state.map(function (t) {
                return m.Paper({
                    children: fg.Row({
                        children: [
                            fg.Col({
                                xs: 2,
                                children: m.Checkbox({
                                    checked: t.isDone,
                                    action: function () { return a.changeDoneStatus({ id: t.id, isDone: !t.isDone }); }
                                })
                            }),
                            fg.Col({
                                xs: 10,
                                children: t.name
                            })
                        ]
                    })
                });
            }))
        });
    }
});
var todosOverviewFactory = createTodosOverview(c.todosCursor);
