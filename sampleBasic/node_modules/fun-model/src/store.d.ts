export interface IState {
}
export interface ICursor<TState extends IState> {
    key: string;
    _?: TState;
}
export interface ICursorFactory<TState, TParms> {
    create(data?: TParms): ICursor<TState>;
}
export declare const rootCursor: ICursor<IState>;
export declare const bootstrap: (defaultState: IState | null, withStateFreezing?: boolean | (() => boolean), subStateSeparator?: string) => void;
export declare const isExistingCursor: <TState extends IState>(cursor: ICursor<TState>) => boolean;
export declare const getState: <TState extends IState>(cursor: ICursor<TState>) => TState;
export declare const setState: <TState extends IState>(cursor: ICursor<TState>, updatedState: TState) => void;
